/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { BillingMeterExternal, BillingMeterQueryParams, CreateBillingMeterRequest, ListResponseBillingMeterExternal } from '../models/index';
export interface CreateBillingMeterOperationRequest {
    createBillingMeterRequest: CreateBillingMeterRequest;
}
export interface DeactivateBillingMeterRequest {
    meterId: string;
}
export interface GetBillingMeterRequest {
    meterId: string;
}
export interface ListBillingMetersRequest {
    billingMeterQueryParams: BillingMeterQueryParams;
}
export interface ReactivateBillingMeterRequest {
    meterId: string;
}
/**
 *
 */
export declare class BillingMetersApi extends runtime.BaseAPI {
    /**
     * Creates a billing meter. A billing meter is a resource that allows you to track usage of a particular event.  For example, you might create a billing meter to track the number of API calls made by  a particular user. You can then attach the billing meter to a price and attach the price to a subscription   to charge the user for the number of API calls they make.
     * Create Billing Meter
     */
    createBillingMeterRaw(requestParameters: CreateBillingMeterOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingMeterExternal>>;
    /**
     * Creates a billing meter. A billing meter is a resource that allows you to track usage of a particular event.  For example, you might create a billing meter to track the number of API calls made by  a particular user. You can then attach the billing meter to a price and attach the price to a subscription   to charge the user for the number of API calls they make.
     * Create Billing Meter
     */
    createBillingMeter(requestParameters: CreateBillingMeterOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingMeterExternal>;
    /**
     * Deactivates a billing meter.
     * Deactivate Billing Meter
     */
    deactivateBillingMeterRaw(requestParameters: DeactivateBillingMeterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingMeterExternal>>;
    /**
     * Deactivates a billing meter.
     * Deactivate Billing Meter
     */
    deactivateBillingMeter(requestParameters: DeactivateBillingMeterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingMeterExternal>;
    /**
     * Retrieves a billing meter given an ID.
     * Get Billing Meter
     */
    getBillingMeterRaw(requestParameters: GetBillingMeterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingMeterExternal>>;
    /**
     * Retrieves a billing meter given an ID.
     * Get Billing Meter
     */
    getBillingMeter(requestParameters: GetBillingMeterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingMeterExternal>;
    /**
     * Retrieve a list of billing meters.
     * List Billing Meters
     */
    listBillingMetersRaw(requestParameters: ListBillingMetersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseBillingMeterExternal>>;
    /**
     * Retrieve a list of billing meters.
     * List Billing Meters
     */
    listBillingMeters(requestParameters: ListBillingMetersRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseBillingMeterExternal>;
    /**
     * Reactivates a billing meter.
     * Reactivate Billing Meter
     */
    reactivateBillingMeterRaw(requestParameters: ReactivateBillingMeterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<BillingMeterExternal>>;
    /**
     * Reactivates a billing meter.
     * Reactivate Billing Meter
     */
    reactivateBillingMeter(requestParameters: ReactivateBillingMeterRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<BillingMeterExternal>;
}
