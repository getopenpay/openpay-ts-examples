/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 */
export declare const EventType: {
    readonly All: "all";
    readonly AccountCreated: "account.created";
    readonly AccountUpdated: "account.updated";
    readonly AccountDeleted: "account.deleted";
    readonly ApiTokenCreated: "api_token.created";
    readonly ApiTokenUpdated: "api_token.updated";
    readonly ApiTokenDeleted: "api_token.deleted";
    readonly ChargeCreated: "charge.created";
    readonly ChargeUpdated: "charge.updated";
    readonly ChargeDeleted: "charge.deleted";
    readonly ChargeSucceeded: "charge.succeeded";
    readonly ChargeFailed: "charge.failed";
    readonly ChargePending: "charge.pending";
    readonly ChargeRefunded: "charge.refunded";
    readonly CouponCreated: "coupon.created";
    readonly CouponUpdated: "coupon.updated";
    readonly CouponDeleted: "coupon.deleted";
    readonly CreditNoteCreated: "credit_note.created";
    readonly CreditNoteUpdated: "credit_note.updated";
    readonly CreditNoteDeleted: "credit_note.deleted";
    readonly CustomerCreated: "customer.created";
    readonly CustomerUpdated: "customer.updated";
    readonly CustomerDeleted: "customer.deleted";
    readonly CustomerBalanceTransactionCreated: "customer_balance_transaction.created";
    readonly CustomerBalanceTransactionUpdated: "customer_balance_transaction.updated";
    readonly CustomerBalanceTransactionDeleted: "customer_balance_transaction.deleted";
    readonly DiscountCreated: "discount.created";
    readonly DiscountUpdated: "discount.updated";
    readonly DiscountDeleted: "discount.deleted";
    readonly InviteCreated: "invite.created";
    readonly InviteUpdated: "invite.updated";
    readonly InviteDeleted: "invite.deleted";
    readonly InviteItemDiscountCreated: "invite_item_discount.created";
    readonly InviteItemDiscountUpdated: "invite_item_discount.updated";
    readonly InviteItemDiscountDeleted: "invite_item_discount.deleted";
    readonly InvoiceCreated: "invoice.created";
    readonly InvoiceUpdated: "invoice.updated";
    readonly InvoiceFinalized: "invoice.finalized";
    readonly InvoicePaid: "invoice.paid";
    readonly InvoicePastDue: "invoice.past_due";
    readonly InvoiceVoided: "invoice.voided";
    readonly InvoiceUncollectible: "invoice.uncollectible";
    readonly InvoiceDeleted: "invoice.deleted";
    readonly InvoiceUpcoming: "invoice.upcoming";
    readonly InvoiceDiscountCreated: "invoice_discount.created";
    readonly InvoiceDiscountUpdated: "invoice_discount.updated";
    readonly InvoiceDiscountDeleted: "invoice_discount.deleted";
    readonly InvoiceItemCreated: "invoice_item.created";
    readonly InvoiceItemUpdated: "invoice_item.updated";
    readonly InvoiceItemDeleted: "invoice_item.deleted";
    readonly PaymentIntentCreated: "payment_intent.created";
    readonly PaymentIntentUpdated: "payment_intent.updated";
    readonly PaymentIntentDeleted: "payment_intent.deleted";
    readonly PaymentIntentSucceeded: "payment_intent.succeeded";
    readonly PaymentIntentProcessing: "payment_intent.processing";
    readonly PaymentIntentRequiresAction: "payment_intent.requires_action";
    readonly PaymentIntentFailed: "payment_intent.failed";
    readonly PaymentMethodCreated: "payment_method.created";
    readonly PaymentMethodUpdated: "payment_method.updated";
    readonly PaymentMethodDeleted: "payment_method.deleted";
    readonly PaymentProcessorCreated: "payment_processor.created";
    readonly PaymentProcessorUpdated: "payment_processor.updated";
    readonly PaymentProcessorDeleted: "payment_processor.deleted";
    readonly PriceCreated: "price.created";
    readonly PriceUpdated: "price.updated";
    readonly PriceDeleted: "price.deleted";
    readonly ProductCreated: "product.created";
    readonly ProductUpdated: "product.updated";
    readonly ProductDeleted: "product.deleted";
    readonly PromotionCodeCreated: "promotion_code.created";
    readonly PromotionCodeUpdated: "promotion_code.updated";
    readonly PromotionCodeDeleted: "promotion_code.deleted";
    readonly RefundCreated: "refund.created";
    readonly RefundUpdated: "refund.updated";
    readonly RefundDeleted: "refund.deleted";
    readonly CustomerSubscriptionCreated: "customer.subscription.created";
    readonly CustomerSubscriptionUpdated: "customer.subscription.updated";
    readonly CustomerSubscriptionDeleted: "customer.subscription.deleted";
    readonly CustomerSubscriptionCanceled: "customer.subscription.canceled";
    readonly CustomerSubscriptionActivated: "customer.subscription.activated";
    readonly CustomerSubscriptionPaused: "customer.subscription.paused";
    readonly CustomerSubscriptionResumed: "customer.subscription.resumed";
    readonly CustomerSubscriptionPastDue: "customer.subscription.past_due";
    readonly CustomerSubscriptionTrialing: "customer.subscription.trialing";
    readonly CustomerSubscriptionTrialWillEnd: "customer.subscription.trial_will_end";
    readonly SubscriptionItemCreated: "subscription_item.created";
    readonly SubscriptionItemUpdated: "subscription_item.updated";
    readonly SubscriptionItemDeleted: "subscription_item.deleted";
    readonly UserCreated: "user.created";
    readonly UserUpdated: "user.updated";
    readonly UserDeleted: "user.deleted";
    readonly UserLoginCreated: "user_login.created";
    readonly UserLoginUpdated: "user_login.updated";
    readonly UserLoginDeleted: "user_login.deleted";
    readonly UserRecordCreated: "user_record.created";
    readonly UserRecordUpdated: "user_record.updated";
    readonly UserRecordDeleted: "user_record.deleted";
    readonly UserRecordSummaryCreated: "user_record_summary.created";
    readonly UserRecordSummaryUpdated: "user_record_summary.updated";
    readonly UserRecordSummaryDeleted: "user_record_summary.deleted";
    readonly WebhookEndpointCreated: "webhook_endpoint.created";
    readonly WebhookEndpointUpdated: "webhook_endpoint.updated";
    readonly WebhookEndpointDeleted: "webhook_endpoint.deleted";
    readonly CheckoutSessionCreated: "checkout_session.created";
    readonly CheckoutSessionCompleted: "checkout_session.completed";
    readonly CheckoutSessionExpired: "checkout_session.expired";
};
export type EventType = typeof EventType[keyof typeof EventType];
export declare function instanceOfEventType(value: any): boolean;
export declare function EventTypeFromJSON(json: any): EventType;
export declare function EventTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventType;
export declare function EventTypeToJSON(value?: EventType | null): any;
export declare function EventTypeToJSONTyped(value: any, ignoreDiscriminator: boolean): EventType;
