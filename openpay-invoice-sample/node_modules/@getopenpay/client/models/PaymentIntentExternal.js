"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfPaymentIntentExternal = instanceOfPaymentIntentExternal;
exports.PaymentIntentExternalFromJSON = PaymentIntentExternalFromJSON;
exports.PaymentIntentExternalFromJSONTyped = PaymentIntentExternalFromJSONTyped;
exports.PaymentIntentExternalToJSON = PaymentIntentExternalToJSON;
exports.PaymentIntentExternalToJSONTyped = PaymentIntentExternalToJSONTyped;
const PaymentIntentStatus_1 = require("./PaymentIntentStatus");
const InvoiceExternal_1 = require("./InvoiceExternal");
const CurrencyEnum_1 = require("./CurrencyEnum");
const ObjectName_1 = require("./ObjectName");
/**
 * Check if a given object implements the PaymentIntentExternal interface.
 */
function instanceOfPaymentIntentExternal(value) {
    if (!('amountAtom' in value) || value['amountAtom'] === undefined)
        return false;
    if (!('amountAtomCapturable' in value) || value['amountAtomCapturable'] === undefined)
        return false;
    if (!('amountAtomReceived' in value) || value['amountAtomReceived'] === undefined)
        return false;
    if (!('chargeIds' in value) || value['chargeIds'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('currency' in value) || value['currency'] === undefined)
        return false;
    if (!('customerId' in value) || value['customerId'] === undefined)
        return false;
    if (!('declineReason' in value) || value['declineReason'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('invoice' in value) || value['invoice'] === undefined)
        return false;
    if (!('invoiceId' in value) || value['invoiceId'] === undefined)
        return false;
    if (!('invoicePaymentProviderTypeFee' in value) || value['invoicePaymentProviderTypeFee'] === undefined)
        return false;
    if (!('lastRefundDate' in value) || value['lastRefundDate'] === undefined)
        return false;
    if (!('paymentMethodId' in value) || value['paymentMethodId'] === undefined)
        return false;
    if (!('paymentProcessorName' in value) || value['paymentProcessorName'] === undefined)
        return false;
    if (!('refundIds' in value) || value['refundIds'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function PaymentIntentExternalFromJSON(json) {
    return PaymentIntentExternalFromJSONTyped(json, false);
}
function PaymentIntentExternalFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'amountAtom': json['amount_atom'],
        'amountAtomCapturable': json['amount_atom_capturable'],
        'amountAtomReceived': json['amount_atom_received'],
        'chargeIds': json['charge_ids'],
        'createdAt': (new Date(json['created_at'])),
        'currency': (0, CurrencyEnum_1.CurrencyEnumFromJSON)(json['currency']),
        'customFields': json['custom_fields'] == null ? undefined : json['custom_fields'],
        'customerId': json['customer_id'],
        'declineReason': json['decline_reason'],
        'id': json['id'],
        'invoice': (0, InvoiceExternal_1.InvoiceExternalFromJSON)(json['invoice']),
        'invoiceId': json['invoice_id'],
        'invoicePaymentProviderTypeFee': json['invoice_payment_provider_type_fee'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'lastRefundDate': (json['last_refund_date'] == null ? null : new Date(json['last_refund_date'])),
        'object': json['object'] == null ? undefined : (0, ObjectName_1.ObjectNameFromJSON)(json['object']),
        'paymentMethodId': json['payment_method_id'],
        'paymentProcessorName': json['payment_processor_name'],
        'refundIds': json['refund_ids'],
        'status': (0, PaymentIntentStatus_1.PaymentIntentStatusFromJSON)(json['status']),
        'updatedAt': (new Date(json['updated_at'])),
    };
}
function PaymentIntentExternalToJSON(json) {
    return PaymentIntentExternalToJSONTyped(json, false);
}
function PaymentIntentExternalToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'amount_atom': value['amountAtom'],
        'amount_atom_capturable': value['amountAtomCapturable'],
        'amount_atom_received': value['amountAtomReceived'],
        'charge_ids': value['chargeIds'],
        'created_at': ((value['createdAt']).toISOString()),
        'currency': (0, CurrencyEnum_1.CurrencyEnumToJSON)(value['currency']),
        'custom_fields': value['customFields'],
        'customer_id': value['customerId'],
        'decline_reason': value['declineReason'],
        'id': value['id'],
        'invoice': (0, InvoiceExternal_1.InvoiceExternalToJSON)(value['invoice']),
        'invoice_id': value['invoiceId'],
        'invoice_payment_provider_type_fee': value['invoicePaymentProviderTypeFee'],
        'is_deleted': value['isDeleted'],
        'last_refund_date': (value['lastRefundDate'] == null ? null : value['lastRefundDate'].toISOString()),
        'object': (0, ObjectName_1.ObjectNameToJSON)(value['object']),
        'payment_method_id': value['paymentMethodId'],
        'payment_processor_name': value['paymentProcessorName'],
        'refund_ids': value['refundIds'],
        'status': (0, PaymentIntentStatus_1.PaymentIntentStatusToJSON)(value['status']),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}
