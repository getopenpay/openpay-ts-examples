/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Enum for all supported tax ID types.
 * @export
 */
export declare const TaxIdTypeEnum: {
    readonly AlTin: "al_tin";
    readonly AdNrt: "ad_nrt";
    readonly AoTin: "ao_tin";
    readonly ArCuit: "ar_cuit";
    readonly AmTin: "am_tin";
    readonly AuAbn: "au_abn";
    readonly AuArn: "au_arn";
    readonly EuVat: "eu_vat";
    readonly BsTin: "bs_tin";
    readonly BhVat: "bh_vat";
    readonly BbTin: "bb_tin";
    readonly ByTin: "by_tin";
    readonly BoTin: "bo_tin";
    readonly BaTin: "ba_tin";
    readonly BrCnpj: "br_cnpj";
    readonly BrCpf: "br_cpf";
    readonly BgUic: "bg_uic";
    readonly KhTin: "kh_tin";
    readonly CaBn: "ca_bn";
    readonly CaGstHst: "ca_gst_hst";
    readonly CaPstBc: "ca_pst_bc";
    readonly CaPstMb: "ca_pst_mb";
    readonly CaPstSk: "ca_pst_sk";
    readonly CaQst: "ca_qst";
    readonly ClTin: "cl_tin";
    readonly CnTin: "cn_tin";
    readonly CoNit: "co_nit";
    readonly CdNif: "cd_nif";
    readonly CrTin: "cr_tin";
    readonly HrOib: "hr_oib";
    readonly DoRcn: "do_rcn";
    readonly EcRuc: "ec_ruc";
    readonly EgTin: "eg_tin";
    readonly SvNit: "sv_nit";
    readonly EuOssVat: "eu_oss_vat";
    readonly DeStn: "de_stn";
    readonly GeVat: "ge_vat";
    readonly GnNif: "gn_nif";
    readonly HkBr: "hk_br";
    readonly HuTin: "hu_tin";
    readonly IsVat: "is_vat";
    readonly InGst: "in_gst";
    readonly IdNpwp: "id_npwp";
    readonly IlVat: "il_vat";
    readonly JpCn: "jp_cn";
    readonly JpRn: "jp_rn";
    readonly JpTrn: "jp_trn";
    readonly KzBin: "kz_bin";
    readonly KePin: "ke_pin";
    readonly LiUid: "li_uid";
    readonly LiVat: "li_vat";
    readonly MyFrp: "my_frp";
    readonly MyItn: "my_itn";
    readonly MySst: "my_sst";
    readonly MrNif: "mr_nif";
    readonly MxRfc: "mx_rfc";
    readonly MdVat: "md_vat";
    readonly MePib: "me_pib";
    readonly MaVat: "ma_vat";
    readonly NpPan: "np_pan";
    readonly NzGst: "nz_gst";
    readonly NgTin: "ng_tin";
    readonly MkVat: "mk_vat";
    readonly NoVat: "no_vat";
    readonly NoVoec: "no_voec";
    readonly OmVat: "om_vat";
    readonly PeRuc: "pe_ruc";
    readonly PhTin: "ph_tin";
    readonly RoTin: "ro_tin";
    readonly RuInn: "ru_inn";
    readonly RuKpp: "ru_kpp";
    readonly SaVat: "sa_vat";
    readonly SnNinea: "sn_ninea";
    readonly RsPib: "rs_pib";
    readonly SgGst: "sg_gst";
    readonly SgUen: "sg_uen";
    readonly SiTin: "si_tin";
    readonly ZaVat: "za_vat";
    readonly KrBrn: "kr_brn";
    readonly EsCif: "es_cif";
    readonly SrFin: "sr_fin";
    readonly ChUid: "ch_uid";
    readonly ChVat: "ch_vat";
    readonly TwVat: "tw_vat";
    readonly TjTin: "tj_tin";
    readonly TzVat: "tz_vat";
    readonly ThVat: "th_vat";
    readonly TrTin: "tr_tin";
    readonly UgTin: "ug_tin";
    readonly UaVat: "ua_vat";
    readonly AeTrn: "ae_trn";
    readonly GbVat: "gb_vat";
    readonly UsEin: "us_ein";
    readonly UyRuc: "uy_ruc";
    readonly UzTin: "uz_tin";
    readonly UzVat: "uz_vat";
    readonly VeRif: "ve_rif";
    readonly VnTin: "vn_tin";
    readonly ZmTin: "zm_tin";
    readonly ZwTin: "zw_tin";
};
export type TaxIdTypeEnum = typeof TaxIdTypeEnum[keyof typeof TaxIdTypeEnum];
export declare function instanceOfTaxIdTypeEnum(value: any): boolean;
export declare function TaxIdTypeEnumFromJSON(json: any): TaxIdTypeEnum;
export declare function TaxIdTypeEnumFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxIdTypeEnum;
export declare function TaxIdTypeEnumToJSON(value?: TaxIdTypeEnum | null): any;
export declare function TaxIdTypeEnumToJSONTyped(value: any, ignoreDiscriminator: boolean): TaxIdTypeEnum;
