"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfListBillingMeterEventSummariesRequest = instanceOfListBillingMeterEventSummariesRequest;
exports.ListBillingMeterEventSummariesRequestFromJSON = ListBillingMeterEventSummariesRequestFromJSON;
exports.ListBillingMeterEventSummariesRequestFromJSONTyped = ListBillingMeterEventSummariesRequestFromJSONTyped;
exports.ListBillingMeterEventSummariesRequestToJSON = ListBillingMeterEventSummariesRequestToJSON;
exports.ListBillingMeterEventSummariesRequestToJSONTyped = ListBillingMeterEventSummariesRequestToJSONTyped;
const MeterEventValueGroupingWindow_1 = require("./MeterEventValueGroupingWindow");
/**
 * Check if a given object implements the ListBillingMeterEventSummariesRequest interface.
 */
function instanceOfListBillingMeterEventSummariesRequest(value) {
    if (!('customerId' in value) || value['customerId'] === undefined)
        return false;
    if (!('endTime' in value) || value['endTime'] === undefined)
        return false;
    if (!('meterId' in value) || value['meterId'] === undefined)
        return false;
    if (!('startTime' in value) || value['startTime'] === undefined)
        return false;
    return true;
}
function ListBillingMeterEventSummariesRequestFromJSON(json) {
    return ListBillingMeterEventSummariesRequestFromJSONTyped(json, false);
}
function ListBillingMeterEventSummariesRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'customerId': json['customer_id'],
        'endTime': (new Date(json['end_time'])),
        'meterId': json['meter_id'],
        'pageNumber': json['page_number'] == null ? undefined : json['page_number'],
        'pageSize': json['page_size'] == null ? undefined : json['page_size'],
        'startTime': (new Date(json['start_time'])),
        'valueGroupingWindow': json['value_grouping_window'] == null ? undefined : (0, MeterEventValueGroupingWindow_1.MeterEventValueGroupingWindowFromJSON)(json['value_grouping_window']),
    };
}
function ListBillingMeterEventSummariesRequestToJSON(json) {
    return ListBillingMeterEventSummariesRequestToJSONTyped(json, false);
}
function ListBillingMeterEventSummariesRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'customer_id': value['customerId'],
        'end_time': ((value['endTime']).toISOString()),
        'meter_id': value['meterId'],
        'page_number': value['pageNumber'],
        'page_size': value['pageSize'],
        'start_time': ((value['startTime']).toISOString()),
        'value_grouping_window': (0, MeterEventValueGroupingWindow_1.MeterEventValueGroupingWindowToJSON)(value['valueGroupingWindow']),
    };
}
