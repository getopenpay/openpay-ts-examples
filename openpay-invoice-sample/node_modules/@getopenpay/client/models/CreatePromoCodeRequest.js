"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreatePromoCodeRequest = instanceOfCreatePromoCodeRequest;
exports.CreatePromoCodeRequestFromJSON = CreatePromoCodeRequestFromJSON;
exports.CreatePromoCodeRequestFromJSONTyped = CreatePromoCodeRequestFromJSONTyped;
exports.CreatePromoCodeRequestToJSON = CreatePromoCodeRequestToJSON;
exports.CreatePromoCodeRequestToJSONTyped = CreatePromoCodeRequestToJSONTyped;
const PromoRestrictions_1 = require("./PromoRestrictions");
/**
 * Check if a given object implements the CreatePromoCodeRequest interface.
 */
function instanceOfCreatePromoCodeRequest(value) {
    if (!('code' in value) || value['code'] === undefined)
        return false;
    if (!('couponId' in value) || value['couponId'] === undefined)
        return false;
    return true;
}
function CreatePromoCodeRequestFromJSON(json) {
    return CreatePromoCodeRequestFromJSONTyped(json, false);
}
function CreatePromoCodeRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'code': json['code'],
        'couponId': json['coupon_id'],
        'customerIds': json['customer_ids'] == null ? undefined : json['customer_ids'],
        'expiresAt': json['expires_at'] == null ? undefined : (new Date(json['expires_at'])),
        'maxRedemptions': json['max_redemptions'] == null ? undefined : json['max_redemptions'],
        'maxRedemptionsPerCustomer': json['max_redemptions_per_customer'] == null ? undefined : json['max_redemptions_per_customer'],
        'restrictions': json['restrictions'] == null ? undefined : (0, PromoRestrictions_1.PromoRestrictionsFromJSON)(json['restrictions']),
    };
}
function CreatePromoCodeRequestToJSON(json) {
    return CreatePromoCodeRequestToJSONTyped(json, false);
}
function CreatePromoCodeRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'code': value['code'],
        'coupon_id': value['couponId'],
        'customer_ids': value['customerIds'],
        'expires_at': value['expiresAt'] == null ? undefined : (value['expiresAt'].toISOString()),
        'max_redemptions': value['maxRedemptions'],
        'max_redemptions_per_customer': value['maxRedemptionsPerCustomer'],
        'restrictions': (0, PromoRestrictions_1.PromoRestrictionsToJSON)(value['restrictions']),
    };
}
