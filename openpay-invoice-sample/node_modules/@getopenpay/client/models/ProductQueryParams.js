"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfProductQueryParams = instanceOfProductQueryParams;
exports.ProductQueryParamsFromJSON = ProductQueryParamsFromJSON;
exports.ProductQueryParamsFromJSONTyped = ProductQueryParamsFromJSONTyped;
exports.ProductQueryParamsToJSON = ProductQueryParamsToJSON;
exports.ProductQueryParamsToJSONTyped = ProductQueryParamsToJSONTyped;
const DateTimeFilter_1 = require("./DateTimeFilter");
const SearchFilter_1 = require("./SearchFilter");
/**
 * Check if a given object implements the ProductQueryParams interface.
 */
function instanceOfProductQueryParams(value) {
    return true;
}
function ProductQueryParamsFromJSON(json) {
    return ProductQueryParamsFromJSONTyped(json, false);
}
function ProductQueryParamsFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': json['created_at'] == null ? undefined : (0, DateTimeFilter_1.DateTimeFilterFromJSON)(json['created_at']),
        'createdBy': json['created_by'] == null ? undefined : json['created_by'],
        'expand': json['expand'] == null ? undefined : json['expand'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'nameContains': json['name_contains'] == null ? undefined : json['name_contains'],
        'pageNumber': json['page_number'] == null ? undefined : json['page_number'],
        'pageSize': json['page_size'] == null ? undefined : json['page_size'],
        'search': json['search'] == null ? undefined : (0, SearchFilter_1.SearchFilterFromJSON)(json['search']),
        'sortDescending': json['sort_descending'] == null ? undefined : json['sort_descending'],
        'sortKey': json['sort_key'] == null ? undefined : json['sort_key'],
        'updatedAt': json['updated_at'] == null ? undefined : (0, DateTimeFilter_1.DateTimeFilterFromJSON)(json['updated_at']),
    };
}
function ProductQueryParamsToJSON(json) {
    return ProductQueryParamsToJSONTyped(json, false);
}
function ProductQueryParamsToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'created_at': (0, DateTimeFilter_1.DateTimeFilterToJSON)(value['createdAt']),
        'created_by': value['createdBy'],
        'expand': value['expand'],
        'is_active': value['isActive'],
        'name_contains': value['nameContains'],
        'page_number': value['pageNumber'],
        'page_size': value['pageSize'],
        'search': (0, SearchFilter_1.SearchFilterToJSON)(value['search']),
        'sort_descending': value['sortDescending'],
        'sort_key': value['sortKey'],
        'updated_at': (0, DateTimeFilter_1.DateTimeFilterToJSON)(value['updatedAt']),
    };
}
