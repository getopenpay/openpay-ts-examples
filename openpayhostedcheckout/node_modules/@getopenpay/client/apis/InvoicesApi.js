"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvoicesApi = void 0;
const runtime = __importStar(require("../runtime"));
const index_1 = require("../models/index");
/**
 *
 */
class InvoicesApi extends runtime.BaseAPI {
    /**
     * Add Comment
     */
    addCommentRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceExternalId'] == null) {
                throw new runtime.RequiredError('invoiceExternalId', 'Required parameter "invoiceExternalId" was null or undefined when calling addComment().');
            }
            if (requestParameters['addCommentRequest'] == null) {
                throw new runtime.RequiredError('addCommentRequest', 'Required parameter "addCommentRequest" was null or undefined when calling addComment().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_external_id}/comment`.replace(`{${"invoice_external_id"}}`, encodeURIComponent(String(requestParameters['invoiceExternalId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.AddCommentRequestToJSON)(requestParameters['addCommentRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Add Comment
     */
    addComment(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.addCommentRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * This endpoint creates a draft invoice for a given subscription. The invoice remains a draft until you finalize the invoice. The created invoice will only include floating invoice items for a subscription. The subscription’s billing cycle and regular subscription events won’t be affected.
     * Create Invoice
     */
    createInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['createInvoiceRequest'] == null) {
                throw new runtime.RequiredError('createInvoiceRequest', 'Required parameter "createInvoiceRequest" was null or undefined when calling createInvoice().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.CreateInvoiceRequestToJSON)(requestParameters['createInvoiceRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * This endpoint creates a draft invoice for a given subscription. The invoice remains a draft until you finalize the invoice. The created invoice will only include floating invoice items for a subscription. The subscription’s billing cycle and regular subscription events won’t be affected.
     * Create Invoice
     */
    createInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Finalize Invoice
     */
    finalizeInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceExternalId'] == null) {
                throw new runtime.RequiredError('invoiceExternalId', 'Required parameter "invoiceExternalId" was null or undefined when calling finalizeInvoice().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_external_id}/finalize`.replace(`{${"invoice_external_id"}}`, encodeURIComponent(String(requestParameters['invoiceExternalId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Finalize Invoice
     */
    finalizeInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.finalizeInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get Invoice
     */
    getInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceExternalId'] == null) {
                throw new runtime.RequiredError('invoiceExternalId', 'Required parameter "invoiceExternalId" was null or undefined when calling getInvoice().');
            }
            const queryParameters = {};
            if (requestParameters['expand'] != null) {
                queryParameters['expand'] = requestParameters['expand'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_external_id}`.replace(`{${"invoice_external_id"}}`, encodeURIComponent(String(requestParameters['invoiceExternalId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Get Invoice
     */
    getInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get Invoice Public
     */
    getInvoicePublicRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['publicPermanentToken'] == null) {
                throw new runtime.RequiredError('publicPermanentToken', 'Required parameter "publicPermanentToken" was null or undefined when calling getInvoicePublic().');
            }
            const queryParameters = {};
            const headerParameters = {};
            const response = yield this.request({
                path: `/invoices/public/{public_permanent_token}`.replace(`{${"public_permanent_token"}}`, encodeURIComponent(String(requestParameters['publicPermanentToken']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoicePublicFromJSON)(jsonValue));
        });
    }
    /**
     * Get Invoice Public
     */
    getInvoicePublic(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getInvoicePublicRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * List Invoices
     */
    listInvoicesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceQueryParams'] == null) {
                throw new runtime.RequiredError('invoiceQueryParams', 'Required parameter "invoiceQueryParams" was null or undefined when calling listInvoices().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/list`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.InvoiceQueryParamsToJSON)(requestParameters['invoiceQueryParams']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ListResponseInvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * List Invoices
     */
    listInvoices(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listInvoicesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Mark Invoice As Uncollectible
     */
    markInvoiceAsUncollectibleRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceExternalId'] == null) {
                throw new runtime.RequiredError('invoiceExternalId', 'Required parameter "invoiceExternalId" was null or undefined when calling markInvoiceAsUncollectible().');
            }
            if (requestParameters['markUncollectibleRequest'] == null) {
                throw new runtime.RequiredError('markUncollectibleRequest', 'Required parameter "markUncollectibleRequest" was null or undefined when calling markInvoiceAsUncollectible().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_external_id}/mark_uncollectible`.replace(`{${"invoice_external_id"}}`, encodeURIComponent(String(requestParameters['invoiceExternalId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.MarkUncollectibleRequestToJSON)(requestParameters['markUncollectibleRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Mark Invoice As Uncollectible
     */
    markInvoiceAsUncollectible(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.markInvoiceAsUncollectibleRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Mark Invoice As Void
     */
    markInvoiceAsVoidRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceExternalId'] == null) {
                throw new runtime.RequiredError('invoiceExternalId', 'Required parameter "invoiceExternalId" was null or undefined when calling markInvoiceAsVoid().');
            }
            if (requestParameters['markVoidRequest'] == null) {
                throw new runtime.RequiredError('markVoidRequest', 'Required parameter "markVoidRequest" was null or undefined when calling markInvoiceAsVoid().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_external_id}/void`.replace(`{${"invoice_external_id"}}`, encodeURIComponent(String(requestParameters['invoiceExternalId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.MarkVoidRequestToJSON)(requestParameters['markVoidRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Mark Invoice As Void
     */
    markInvoiceAsVoid(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.markInvoiceAsVoidRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Pay Invoice
     */
    payInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceExternalId'] == null) {
                throw new runtime.RequiredError('invoiceExternalId', 'Required parameter "invoiceExternalId" was null or undefined when calling payInvoice().');
            }
            if (requestParameters['payInvoiceRequest'] == null) {
                throw new runtime.RequiredError('payInvoiceRequest', 'Required parameter "payInvoiceRequest" was null or undefined when calling payInvoice().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_external_id}/pay`.replace(`{${"invoice_external_id"}}`, encodeURIComponent(String(requestParameters['invoiceExternalId']))),
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.PayInvoiceRequestToJSON)(requestParameters['payInvoiceRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Pay Invoice
     */
    payInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.payInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Preview Next Invoice
     */
    previewNextInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['subscriptionId'] == null) {
                throw new runtime.RequiredError('subscriptionId', 'Required parameter "subscriptionId" was null or undefined when calling previewNextInvoice().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/preview_next_invoice/{subscription_id}`.replace(`{${"subscription_id"}}`, encodeURIComponent(String(requestParameters['subscriptionId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Preview Next Invoice
     */
    previewNextInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.previewNextInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Update Invoice
     */
    updateInvoiceRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['invoiceId'] == null) {
                throw new runtime.RequiredError('invoiceId', 'Required parameter "invoiceId" was null or undefined when calling updateInvoice().');
            }
            if (requestParameters['updateInvoiceRequest'] == null) {
                throw new runtime.RequiredError('updateInvoiceRequest', 'Required parameter "updateInvoiceRequest" was null or undefined when calling updateInvoice().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/invoices/{invoice_id}`.replace(`{${"invoice_id"}}`, encodeURIComponent(String(requestParameters['invoiceId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.UpdateInvoiceRequestToJSON)(requestParameters['updateInvoiceRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.InvoiceExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Update Invoice
     */
    updateInvoice(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updateInvoiceRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.InvoicesApi = InvoicesApi;
