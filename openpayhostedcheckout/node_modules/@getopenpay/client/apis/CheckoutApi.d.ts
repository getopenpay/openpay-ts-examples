/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CheckoutSessionExternal, CheckoutSessionQueryParams, CheckoutSuccessResponse, CreateCheckoutSessionRequest, ListResponseCheckoutSessionExternal } from '../models/index';
export interface CreateCheckoutSessionOperationRequest {
    createCheckoutSessionRequest: CreateCheckoutSessionRequest;
}
export interface GetCheckoutSessionRequest {
    sessionId: string;
}
export interface ListCheckoutSessionsRequest {
    checkoutSessionQueryParams: CheckoutSessionQueryParams;
}
export interface ValidateCheckoutAttemptRequest {
    checkoutAttemptId: string;
}
export interface VerifyCheckoutSessionPaymentMethodRequest {
    checkoutSecureToken: string;
    paymentMethodId: string;
}
/**
 *
 */
export declare class CheckoutApi extends runtime.BaseAPI {
    /**
     * Create Checkout Session
     */
    createCheckoutSessionRaw(requestParameters: CreateCheckoutSessionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutSessionExternal>>;
    /**
     * Create Checkout Session
     */
    createCheckoutSession(requestParameters: CreateCheckoutSessionOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutSessionExternal>;
    /**
     * Get Checkout Session
     */
    getCheckoutSessionRaw(requestParameters: GetCheckoutSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutSessionExternal>>;
    /**
     * Get Checkout Session
     */
    getCheckoutSession(requestParameters: GetCheckoutSessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutSessionExternal>;
    /**
     * List Checkout Sessions
     */
    listCheckoutSessionsRaw(requestParameters: ListCheckoutSessionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ListResponseCheckoutSessionExternal>>;
    /**
     * List Checkout Sessions
     */
    listCheckoutSessions(requestParameters: ListCheckoutSessionsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ListResponseCheckoutSessionExternal>;
    /**
     * Validate Checkout Attempt
     */
    validateCheckoutAttemptRaw(requestParameters: ValidateCheckoutAttemptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutSuccessResponse>>;
    /**
     * Validate Checkout Attempt
     */
    validateCheckoutAttempt(requestParameters: ValidateCheckoutAttemptRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutSuccessResponse>;
    /**
     * Verify that a checkout session and payment method belong to the same customer.
     * Verify Checkout Session Payment Method
     */
    verifyCheckoutSessionPaymentMethodRaw(requestParameters: VerifyCheckoutSessionPaymentMethodRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckoutSessionExternal>>;
    /**
     * Verify that a checkout session and payment method belong to the same customer.
     * Verify Checkout Session Payment Method
     */
    verifyCheckoutSessionPaymentMethod(requestParameters: VerifyCheckoutSessionPaymentMethodRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckoutSessionExternal>;
}
