"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PromotionCodesApi = void 0;
const runtime = __importStar(require("../runtime"));
const index_1 = require("../models/index");
/**
 *
 */
class PromotionCodesApi extends runtime.BaseAPI {
    /**
     * Create Promo Code
     */
    createPromoCodeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['createPromoCodeRequest'] == null) {
                throw new runtime.RequiredError('createPromoCodeRequest', 'Required parameter "createPromoCodeRequest" was null or undefined when calling createPromoCode().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/promotion-codes/`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.CreatePromoCodeRequestToJSON)(requestParameters['createPromoCodeRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.PromotionCodeExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Create Promo Code
     */
    createPromoCode(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.createPromoCodeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get Promo Code
     */
    getPromoCodeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['promoCodeId'] == null) {
                throw new runtime.RequiredError('promoCodeId', 'Required parameter "promoCodeId" was null or undefined when calling getPromoCode().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/promotion-codes/{promo_code_id}`.replace(`{${"promo_code_id"}}`, encodeURIComponent(String(requestParameters['promoCodeId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.PromotionCodeExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Get Promo Code
     */
    getPromoCode(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getPromoCodeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get Promo Code By Code
     */
    getPromoCodeByCodeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['promoCode'] == null) {
                throw new runtime.RequiredError('promoCode', 'Required parameter "promoCode" was null or undefined when calling getPromoCodeByCode().');
            }
            const queryParameters = {};
            const headerParameters = {};
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/promotion-codes/code/{promo_code}`.replace(`{${"promo_code"}}`, encodeURIComponent(String(requestParameters['promoCode']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.PromotionCodeExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Get Promo Code By Code
     */
    getPromoCodeByCode(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getPromoCodeByCodeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * List Promo Codes
     */
    listPromoCodesRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['promoCodeQueryParams'] == null) {
                throw new runtime.RequiredError('promoCodeQueryParams', 'Required parameter "promoCodeQueryParams" was null or undefined when calling listPromoCodes().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/promotion-codes/list`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.PromoCodeQueryParamsToJSON)(requestParameters['promoCodeQueryParams']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.ListResponsePromotionCodeExternalFromJSON)(jsonValue));
        });
    }
    /**
     * List Promo Codes
     */
    listPromoCodes(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.listPromoCodesRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Update Promo Code
     */
    updatePromoCodeRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['promoCodeId'] == null) {
                throw new runtime.RequiredError('promoCodeId', 'Required parameter "promoCodeId" was null or undefined when calling updatePromoCode().');
            }
            if (requestParameters['updatePromoCodeRequest'] == null) {
                throw new runtime.RequiredError('updatePromoCodeRequest', 'Required parameter "updatePromoCodeRequest" was null or undefined when calling updatePromoCode().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.accessToken) {
                const token = this.configuration.accessToken;
                const tokenString = yield token("HTTPBearer", []);
                if (tokenString) {
                    headerParameters["Authorization"] = `Bearer ${tokenString}`;
                }
            }
            const response = yield this.request({
                path: `/promotion-codes/{promo_code_id}`.replace(`{${"promo_code_id"}}`, encodeURIComponent(String(requestParameters['promoCodeId']))),
                method: 'PUT',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.UpdatePromoCodeRequestToJSON)(requestParameters['updatePromoCodeRequest']),
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.PromotionCodeExternalFromJSON)(jsonValue));
        });
    }
    /**
     * Update Promo Code
     */
    updatePromoCode(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.updatePromoCodeRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
}
exports.PromotionCodesApi = PromotionCodesApi;
