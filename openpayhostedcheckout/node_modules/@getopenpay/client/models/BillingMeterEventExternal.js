"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBillingMeterEventExternal = instanceOfBillingMeterEventExternal;
exports.BillingMeterEventExternalFromJSON = BillingMeterEventExternalFromJSON;
exports.BillingMeterEventExternalFromJSONTyped = BillingMeterEventExternalFromJSONTyped;
exports.BillingMeterEventExternalToJSON = BillingMeterEventExternalToJSON;
exports.BillingMeterEventExternalToJSONTyped = BillingMeterEventExternalToJSONTyped;
const BillingMeterEventStatus_1 = require("./BillingMeterEventStatus");
const ObjectName_1 = require("./ObjectName");
/**
 * Check if a given object implements the BillingMeterEventExternal interface.
 */
function instanceOfBillingMeterEventExternal(value) {
    if (!('accountId' in value) || value['accountId'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('eventName' in value) || value['eventName'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('payload' in value) || value['payload'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function BillingMeterEventExternalFromJSON(json) {
    return BillingMeterEventExternalFromJSONTyped(json, false);
}
function BillingMeterEventExternalFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accountId': json['account_id'],
        'createdAt': (new Date(json['created_at'])),
        'eventDatetime': json['event_datetime'] == null ? undefined : (new Date(json['event_datetime'])),
        'eventName': json['event_name'],
        'id': json['id'],
        'identifier': json['identifier'] == null ? undefined : json['identifier'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'object': json['object'] == null ? undefined : (0, ObjectName_1.ObjectNameFromJSON)(json['object']),
        'payload': json['payload'],
        'status': (0, BillingMeterEventStatus_1.BillingMeterEventStatusFromJSON)(json['status']),
        'updatedAt': (new Date(json['updated_at'])),
    };
}
function BillingMeterEventExternalToJSON(json) {
    return BillingMeterEventExternalToJSONTyped(json, false);
}
function BillingMeterEventExternalToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'account_id': value['accountId'],
        'created_at': ((value['createdAt']).toISOString()),
        'event_datetime': value['eventDatetime'] == null ? undefined : ((value['eventDatetime']).toISOString()),
        'event_name': value['eventName'],
        'id': value['id'],
        'identifier': value['identifier'],
        'is_deleted': value['isDeleted'],
        'object': (0, ObjectName_1.ObjectNameToJSON)(value['object']),
        'payload': value['payload'],
        'status': (0, BillingMeterEventStatus_1.BillingMeterEventStatusToJSON)(value['status']),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}
