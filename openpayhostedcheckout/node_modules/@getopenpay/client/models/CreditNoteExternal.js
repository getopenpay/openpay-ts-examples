"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCreditNoteExternal = instanceOfCreditNoteExternal;
exports.CreditNoteExternalFromJSON = CreditNoteExternalFromJSON;
exports.CreditNoteExternalFromJSONTyped = CreditNoteExternalFromJSONTyped;
exports.CreditNoteExternalToJSON = CreditNoteExternalToJSON;
exports.CreditNoteExternalToJSONTyped = CreditNoteExternalToJSONTyped;
const CreditNoteItemExternal_1 = require("./CreditNoteItemExternal");
const CreditNoteReason_1 = require("./CreditNoteReason");
const CurrencyEnum_1 = require("./CurrencyEnum");
const ObjectName_1 = require("./ObjectName");
/**
 * Check if a given object implements the CreditNoteExternal interface.
 */
function instanceOfCreditNoteExternal(value) {
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('creditAmountAtom' in value) || value['creditAmountAtom'] === undefined)
        return false;
    if (!('currency' in value) || value['currency'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('invoiceId' in value) || value['invoiceId'] === undefined)
        return false;
    if (!('items' in value) || value['items'] === undefined)
        return false;
    if (!('reason' in value) || value['reason'] === undefined)
        return false;
    if (!('refundAmountAtom' in value) || value['refundAmountAtom'] === undefined)
        return false;
    if (!('totalAmountAtom' in value) || value['totalAmountAtom'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function CreditNoteExternalFromJSON(json) {
    return CreditNoteExternalFromJSONTyped(json, false);
}
function CreditNoteExternalFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'createdAt': (new Date(json['created_at'])),
        'creditAmountAtom': json['credit_amount_atom'],
        'currency': (0, CurrencyEnum_1.CurrencyEnumFromJSON)(json['currency']),
        'id': json['id'],
        'invoiceId': json['invoice_id'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'items': (json['items'].map(CreditNoteItemExternal_1.CreditNoteItemExternalFromJSON)),
        'object': json['object'] == null ? undefined : (0, ObjectName_1.ObjectNameFromJSON)(json['object']),
        'reason': (0, CreditNoteReason_1.CreditNoteReasonFromJSON)(json['reason']),
        'refundAmountAtom': json['refund_amount_atom'],
        'totalAmountAtom': json['total_amount_atom'],
        'updatedAt': (new Date(json['updated_at'])),
    };
}
function CreditNoteExternalToJSON(json) {
    return CreditNoteExternalToJSONTyped(json, false);
}
function CreditNoteExternalToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'created_at': ((value['createdAt']).toISOString()),
        'credit_amount_atom': value['creditAmountAtom'],
        'currency': (0, CurrencyEnum_1.CurrencyEnumToJSON)(value['currency']),
        'id': value['id'],
        'invoice_id': value['invoiceId'],
        'is_deleted': value['isDeleted'],
        'items': (value['items'].map(CreditNoteItemExternal_1.CreditNoteItemExternalToJSON)),
        'object': (0, ObjectName_1.ObjectNameToJSON)(value['object']),
        'reason': (0, CreditNoteReason_1.CreditNoteReasonToJSON)(value['reason']),
        'refund_amount_atom': value['refundAmountAtom'],
        'total_amount_atom': value['totalAmountAtom'],
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}
