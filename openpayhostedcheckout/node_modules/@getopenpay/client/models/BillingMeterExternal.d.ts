/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BillingMeterAggregationFormula } from './BillingMeterAggregationFormula';
import type { ObjectName } from './ObjectName';
/**
 *
 * @export
 * @interface BillingMeterExternal
 */
export interface BillingMeterExternal {
    /**
     * Unique identifier for the account.
     * @type {string}
     * @memberof BillingMeterExternal
     */
    accountId: string;
    /**
     * Specifies how events are aggregated. Allowed values are count to count the number of events and sum to sum each event’s value.
     * @type {BillingMeterAggregationFormula}
     * @memberof BillingMeterExternal
     */
    aggregationFormula?: BillingMeterAggregationFormula;
    /**
     * DateTime at which the object was created, in 'ISO 8601' format.
     * @type {Date}
     * @memberof BillingMeterExternal
     */
    createdAt: Date;
    /**
     * The meter’s name.
     * @type {string}
     * @memberof BillingMeterExternal
     */
    displayName: string;
    /**
     * The name of the meter event to record usage for. Corresponds with the event_name field on meter events.
     * @type {string}
     * @memberof BillingMeterExternal
     */
    eventName: string;
    /**
     * The key in the usage event payload to use for mapping the event to a customer.
     * @type {string}
     * @memberof BillingMeterExternal
     */
    eventPayloadCustomerMappingKey?: string;
    /**
     * The key in the usage event payload to use as the value for this meter. For example, if the event payload contains usage on a bytes_used field, then set the event_payload_value_key to “bytes_used”.
     * @type {string}
     * @memberof BillingMeterExternal
     */
    eventPayloadValueKey?: string;
    /**
     * Unique Identifier of the Billing Meter.
     * @type {string}
     * @memberof BillingMeterExternal
     */
    id: string;
    /**
     * The meter’s status.
     * @type {boolean}
     * @memberof BillingMeterExternal
     */
    isActive: boolean;
    /**
     * If true, indicates that this object has been deleted
     * @type {boolean}
     * @memberof BillingMeterExternal
     */
    isDeleted?: boolean;
    /**
     *
     * @type {ObjectName}
     * @memberof BillingMeterExternal
     */
    object?: ObjectName;
    /**
     * DateTime at which the object was updated, in 'ISO 8601' format.
     * @type {Date}
     * @memberof BillingMeterExternal
     */
    updatedAt: Date;
}
/**
 * Check if a given object implements the BillingMeterExternal interface.
 */
export declare function instanceOfBillingMeterExternal(value: object): value is BillingMeterExternal;
export declare function BillingMeterExternalFromJSON(json: any): BillingMeterExternal;
export declare function BillingMeterExternalFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingMeterExternal;
export declare function BillingMeterExternalToJSON(json: any): BillingMeterExternal;
export declare function BillingMeterExternalToJSONTyped(value?: BillingMeterExternal | null, ignoreDiscriminator?: boolean): any;
