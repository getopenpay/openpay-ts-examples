"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfEventExternal = instanceOfEventExternal;
exports.EventExternalFromJSON = EventExternalFromJSON;
exports.EventExternalFromJSONTyped = EventExternalFromJSONTyped;
exports.EventExternalToJSON = EventExternalToJSON;
exports.EventExternalToJSONTyped = EventExternalToJSONTyped;
const EventType_1 = require("./EventType");
const ObjectName_1 = require("./ObjectName");
/**
 * Check if a given object implements the EventExternal interface.
 */
function instanceOfEventExternal(value) {
    if (!('accountId' in value) || value['accountId'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('data' in value) || value['data'] === undefined)
        return false;
    if (!('dataPrevious' in value) || value['dataPrevious'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('pendingWebhooks' in value) || value['pendingWebhooks'] === undefined)
        return false;
    if (!('requestId' in value) || value['requestId'] === undefined)
        return false;
    if (!('requestIdempotencyKey' in value) || value['requestIdempotencyKey'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function EventExternalFromJSON(json) {
    return EventExternalFromJSONTyped(json, false);
}
function EventExternalFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accountId': json['account_id'],
        'createdAt': (new Date(json['created_at'])),
        'data': json['data'],
        'dataPrevious': json['data_previous'],
        'id': json['id'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'object': json['object'] == null ? undefined : (0, ObjectName_1.ObjectNameFromJSON)(json['object']),
        'pendingWebhooks': json['pending_webhooks'],
        'requestId': json['request_id'],
        'requestIdempotencyKey': json['request_idempotency_key'],
        'type': (0, EventType_1.EventTypeFromJSON)(json['type']),
        'updatedAt': (new Date(json['updated_at'])),
        'user': json['user'] == null ? undefined : json['user'],
    };
}
function EventExternalToJSON(json) {
    return EventExternalToJSONTyped(json, false);
}
function EventExternalToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'account_id': value['accountId'],
        'created_at': ((value['createdAt']).toISOString()),
        'data': value['data'],
        'data_previous': value['dataPrevious'],
        'id': value['id'],
        'is_deleted': value['isDeleted'],
        'object': (0, ObjectName_1.ObjectNameToJSON)(value['object']),
        'pending_webhooks': value['pendingWebhooks'],
        'request_id': value['requestId'],
        'request_idempotency_key': value['requestIdempotencyKey'],
        'type': (0, EventType_1.EventTypeToJSON)(value['type']),
        'updated_at': ((value['updatedAt']).toISOString()),
        'user': value['user'],
    };
}
