/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { ProrationEnum } from './ProrationEnum';
/**
 *
 * @export
 * @interface UpdateSubscriptionItemRequest
 */
export interface UpdateSubscriptionItemRequest {
    /**
     *
     * @type {object}
     * @memberof UpdateSubscriptionItemRequest
     */
    customFields?: object | null;
    /**
     *
     * @type {string}
     * @memberof UpdateSubscriptionItemRequest
     */
    description?: string | null;
    /**
     *
     * @type {boolean}
     * @memberof UpdateSubscriptionItemRequest
     */
    dropAtEnd?: boolean | null;
    /**
     *
     * @type {string}
     * @memberof UpdateSubscriptionItemRequest
     */
    priceId?: string | null;
    /**
     * Determines how to handle prorations when the billable items changes. In case of subscription is in trialing state, invoice items if any will be for amount_atom 0.
     * @type {ProrationEnum}
     * @memberof UpdateSubscriptionItemRequest
     */
    prorationBehavior?: ProrationEnum;
    /**
     *
     * @type {number}
     * @memberof UpdateSubscriptionItemRequest
     */
    quantity?: number | null;
}
/**
 * Check if a given object implements the UpdateSubscriptionItemRequest interface.
 */
export declare function instanceOfUpdateSubscriptionItemRequest(value: object): value is UpdateSubscriptionItemRequest;
export declare function UpdateSubscriptionItemRequestFromJSON(json: any): UpdateSubscriptionItemRequest;
export declare function UpdateSubscriptionItemRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSubscriptionItemRequest;
export declare function UpdateSubscriptionItemRequestToJSON(json: any): UpdateSubscriptionItemRequest;
export declare function UpdateSubscriptionItemRequestToJSONTyped(value?: UpdateSubscriptionItemRequest | null, ignoreDiscriminator?: boolean): any;
