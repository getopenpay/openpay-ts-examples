"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ObjectName = void 0;
exports.instanceOfObjectName = instanceOfObjectName;
exports.ObjectNameFromJSON = ObjectNameFromJSON;
exports.ObjectNameFromJSONTyped = ObjectNameFromJSONTyped;
exports.ObjectNameToJSON = ObjectNameToJSON;
exports.ObjectNameToJSONTyped = ObjectNameToJSONTyped;
/**
 *
 * @export
 */
exports.ObjectName = {
    Account: 'account',
    ApiToken: 'api_token',
    BillingMeter: 'billing_meter',
    BillingMeterEvent: 'billing_meter_event',
    BillingMeterEventAdjustment: 'billing_meter_event_adjustment',
    Charge: 'charge',
    CheckoutAttempt: 'checkout_attempt',
    CheckoutSession: 'checkout_session',
    CheckoutSessionItem: 'checkout_session_item',
    Coupon: 'coupon',
    CreditNote: 'credit_note',
    CreditNoteItem: 'credit_note_item',
    Customer: 'customer',
    CustomerBalanceTransaction: 'customer_balance_transaction',
    DeliveryAttempt: 'delivery_attempt',
    Discount: 'discount',
    Dispute: 'dispute',
    Event: 'event',
    Invite: 'invite',
    InvoiceItemDiscount: 'invoice_item_discount',
    Invoice: 'invoice',
    InvoiceDiscount: 'invoice_discount',
    InvoiceItem: 'invoice_item',
    PaymentIntent: 'payment_intent',
    PaymentLink: 'payment_link',
    PaymentLinkLineItem: 'payment_link_line_item',
    PaymentMethod: 'payment_method',
    TokenizedCardPaymentMethod: 'tokenized_card_payment_method',
    PaymentMethodMapping: 'payment_method_mapping',
    PaymentProcessor: 'payment_processor',
    PortalSession: 'portal_session',
    Price: 'price',
    PriceTier: 'price_tier',
    Product: 'product',
    ProductFamily: 'product_family',
    PromotionCode: 'promotion_code',
    Refund: 'refund',
    SetupIntent: 'setup_intent',
    SignupAnswers: 'signup_answers',
    SignupQuestions: 'signup_questions',
    SignupQuestionnaireStatus: 'signup_questionnaire_status',
    SingleUseToken: 'single_use_token',
    Subscription: 'subscription',
    SubscriptionItem: 'subscription_item',
    TaxIntegration: 'tax_integration',
    User: 'user',
    UserLogin: 'user_login',
    UserRecord: 'user_record',
    UserRecordSummary: 'user_record_summary',
    TransitionEligibility: 'transition_eligibility',
    WebhookEndpoint: 'webhook_endpoint',
    Email: 'email',
    AnalyticsSegment: 'analytics_segment'
};
function instanceOfObjectName(value) {
    for (const key in exports.ObjectName) {
        if (Object.prototype.hasOwnProperty.call(exports.ObjectName, key)) {
            if (exports.ObjectName[key] === value) {
                return true;
            }
        }
    }
    return false;
}
function ObjectNameFromJSON(json) {
    return ObjectNameFromJSONTyped(json, false);
}
function ObjectNameFromJSONTyped(json, ignoreDiscriminator) {
    return json;
}
function ObjectNameToJSON(value) {
    return value;
}
function ObjectNameToJSONTyped(value, ignoreDiscriminator) {
    return value;
}
