/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { PaymentProviderType } from './PaymentProviderType';
/**
 * Allows customization of which payment processors are available during each checkout session.
 * @export
 * @interface CheckoutProcessorsPreferences
 */
export interface CheckoutProcessorsPreferences {
    /**
     * If not empty, the enabled providers will be filtered by this list.
     * @type {Array<PaymentProviderType>}
     * @memberof CheckoutProcessorsPreferences
     */
    filterProviders?: Array<PaymentProviderType>;
    /**
     * If not empty, only the processors with these ids will be accepted.
     * @type {Array<string>}
     * @memberof CheckoutProcessorsPreferences
     */
    idsWhitelist?: Array<string>;
    /**
     * If not empty, only the processors with these names will be accepted. Valid values are: adyen, airwallex, authorize_net, checkout_com, braintree, stripe, foobar, pockyt, cybersource, loop.
     * @type {Array<string>}
     * @memberof CheckoutProcessorsPreferences
     */
    namesWhitelist?: Array<string>;
}
/**
 * Check if a given object implements the CheckoutProcessorsPreferences interface.
 */
export declare function instanceOfCheckoutProcessorsPreferences(value: object): value is CheckoutProcessorsPreferences;
export declare function CheckoutProcessorsPreferencesFromJSON(json: any): CheckoutProcessorsPreferences;
export declare function CheckoutProcessorsPreferencesFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckoutProcessorsPreferences;
export declare function CheckoutProcessorsPreferencesToJSON(json: any): CheckoutProcessorsPreferences;
export declare function CheckoutProcessorsPreferencesToJSONTyped(value?: CheckoutProcessorsPreferences | null, ignoreDiscriminator?: boolean): any;
