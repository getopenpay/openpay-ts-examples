/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { BillingMeterEventStatus } from './BillingMeterEventStatus';
import type { ObjectName } from './ObjectName';
/**
 *
 * @export
 * @interface BillingMeterEventExternal
 */
export interface BillingMeterEventExternal {
    /**
     * Unique identifier for the account.
     * @type {string}
     * @memberof BillingMeterEventExternal
     */
    accountId: string;
    /**
     * DateTime at which the object was created, in 'ISO 8601' format.
     * @type {Date}
     * @memberof BillingMeterEventExternal
     */
    createdAt: Date;
    /**
     * The time of the event.
     * @type {Date}
     * @memberof BillingMeterEventExternal
     */
    eventDatetime?: Date;
    /**
     * The name of the meter event. Corresponds with the event_name field on a meter.
     * @type {string}
     * @memberof BillingMeterEventExternal
     */
    eventName: string;
    /**
     * Unique identifier of meter event.
     * @type {string}
     * @memberof BillingMeterEventExternal
     */
    id: string;
    /**
     * A unique identifier for the event. If not provided, one will be generated. We recommend using a globally unique identifier for this.
     * @type {string}
     * @memberof BillingMeterEventExternal
     */
    identifier?: string;
    /**
     * If true, indicates that this object has been deleted
     * @type {boolean}
     * @memberof BillingMeterEventExternal
     */
    isDeleted?: boolean;
    /**
     *
     * @type {ObjectName}
     * @memberof BillingMeterEventExternal
     */
    object?: ObjectName;
    /**
     * The payload of the event. This must contain the fields corresponding to a meterâ€™s event_payload_customer_mapping_key (default is customer_id) and event_payload_value_key (default is value).
     * @type {object}
     * @memberof BillingMeterEventExternal
     */
    payload: object;
    /**
     * Status of the billing meter event.
     * @type {BillingMeterEventStatus}
     * @memberof BillingMeterEventExternal
     */
    status: BillingMeterEventStatus;
    /**
     * DateTime at which the object was updated, in 'ISO 8601' format.
     * @type {Date}
     * @memberof BillingMeterEventExternal
     */
    updatedAt: Date;
}
/**
 * Check if a given object implements the BillingMeterEventExternal interface.
 */
export declare function instanceOfBillingMeterEventExternal(value: object): value is BillingMeterEventExternal;
export declare function BillingMeterEventExternalFromJSON(json: any): BillingMeterEventExternal;
export declare function BillingMeterEventExternalFromJSONTyped(json: any, ignoreDiscriminator: boolean): BillingMeterEventExternal;
export declare function BillingMeterEventExternalToJSON(json: any): BillingMeterEventExternal;
export declare function BillingMeterEventExternalToJSONTyped(value?: BillingMeterEventExternal | null, ignoreDiscriminator?: boolean): any;
