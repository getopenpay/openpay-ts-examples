"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * OpenPay API
 * super charge your subscription management.
 *
 * The version of the OpenAPI document: 1.2.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfBillingMeterEventAdjustmentExternal = instanceOfBillingMeterEventAdjustmentExternal;
exports.BillingMeterEventAdjustmentExternalFromJSON = BillingMeterEventAdjustmentExternalFromJSON;
exports.BillingMeterEventAdjustmentExternalFromJSONTyped = BillingMeterEventAdjustmentExternalFromJSONTyped;
exports.BillingMeterEventAdjustmentExternalToJSON = BillingMeterEventAdjustmentExternalToJSON;
exports.BillingMeterEventAdjustmentExternalToJSONTyped = BillingMeterEventAdjustmentExternalToJSONTyped;
const BillingMeterEventAdjustmentStatus_1 = require("./BillingMeterEventAdjustmentStatus");
const BillingMeterAdjustmentType_1 = require("./BillingMeterAdjustmentType");
const ObjectName_1 = require("./ObjectName");
/**
 * Check if a given object implements the BillingMeterEventAdjustmentExternal interface.
 */
function instanceOfBillingMeterEventAdjustmentExternal(value) {
    if (!('accountId' in value) || value['accountId'] === undefined)
        return false;
    if (!('cancelIdentifier' in value) || value['cancelIdentifier'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('eventName' in value) || value['eventName'] === undefined)
        return false;
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function BillingMeterEventAdjustmentExternalFromJSON(json) {
    return BillingMeterEventAdjustmentExternalFromJSONTyped(json, false);
}
function BillingMeterEventAdjustmentExternalFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'accountId': json['account_id'],
        'cancelIdentifier': json['cancel_identifier'],
        'createdAt': (new Date(json['created_at'])),
        'eventName': json['event_name'],
        'id': json['id'],
        'isDeleted': json['is_deleted'] == null ? undefined : json['is_deleted'],
        'object': json['object'] == null ? undefined : (0, ObjectName_1.ObjectNameFromJSON)(json['object']),
        'status': (0, BillingMeterEventAdjustmentStatus_1.BillingMeterEventAdjustmentStatusFromJSON)(json['status']),
        'type': json['type'] == null ? undefined : (0, BillingMeterAdjustmentType_1.BillingMeterAdjustmentTypeFromJSON)(json['type']),
        'updatedAt': (new Date(json['updated_at'])),
    };
}
function BillingMeterEventAdjustmentExternalToJSON(json) {
    return BillingMeterEventAdjustmentExternalToJSONTyped(json, false);
}
function BillingMeterEventAdjustmentExternalToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'account_id': value['accountId'],
        'cancel_identifier': value['cancelIdentifier'],
        'created_at': ((value['createdAt']).toISOString()),
        'event_name': value['eventName'],
        'id': value['id'],
        'is_deleted': value['isDeleted'],
        'object': (0, ObjectName_1.ObjectNameToJSON)(value['object']),
        'status': (0, BillingMeterEventAdjustmentStatus_1.BillingMeterEventAdjustmentStatusToJSON)(value['status']),
        'type': (0, BillingMeterAdjustmentType_1.BillingMeterAdjustmentTypeToJSON)(value['type']),
        'updated_at': ((value['updatedAt']).toISOString()),
    };
}
